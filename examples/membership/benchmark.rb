require 'bundler/setup'
require 'benchmark/ips'

ENV['IMPLEMENTATION'] = 'NONE'

require 'membership'

Benchmark.ips do |x|
  x.report("Ruby (naive)") do
    [1,2,3,4,5].naive_superset_of?([])
    [].naive_superset_of?([1,2,3,4,5])
    [].naive_superset_of?([])
    [1,2,3,4,5].naive_superset_of?([1])
    [1,2,3,4,5].naive_superset_of?([2])
    [1,2,3,4,5].naive_superset_of?([5])
    [1,2,3,4,5].naive_superset_of?([1,2])
    [1,2,3,4,5].naive_superset_of?([1,4])
    [1,2,3,4,5].naive_superset_of?([2,5])
    [1,2,3,4,5].naive_superset_of?([4,5])
    [1,2,3,4,5].naive_superset_of?([1,2,3])
    [1,2,3,4,5].naive_superset_of?([2,3,5])
    [1,2,3,4,5].naive_superset_of?([1,4,5])
    [1,2,3,4,5].naive_superset_of?([1,2,3,4])
    [1,2,3,4,5].naive_superset_of?([1,2,4,5])
    [1,2,3,4,5].naive_superset_of?([2,3,4,5])
    [1,2,3,4,5].naive_superset_of?([1,2,3,4,5])
    [1,2,3,4,5].naive_superset_of?([0])
    [1,2,3,4,5].naive_superset_of?([6])
    [1,2,3,4,5].naive_superset_of?([0,1])
    [1,2,3,4,5].naive_superset_of?([2,6])
    [1,2,3,4,5].naive_superset_of?([6,7])
    [1,2,3,4,5].naive_superset_of?([1,2,6])
    [1,2,3,4,5].naive_superset_of?([0,2,3])
    [1,2,3,4,5].naive_superset_of?([7,8,9])
    [1,2,3,4,5].naive_superset_of?([0,1,2,3])
    [1,2,3,4,5].naive_superset_of?([3,4,5,6])
    [1,2,3,4,5].naive_superset_of?([6,7,8,9])
    [1,2,3,4,5].naive_superset_of?([0,1,2,3,4])
    [1,2,3,4,5].naive_superset_of?([2,3,4,5,6])
    [1,2,3,4,5].naive_superset_of?([6,7,8,9,10])
  end

  x.report("Ruby (fast)") do
    [1,2,3,4,5].fast_superset_of?([])
    [].fast_superset_of?([1,2,3,4,5])
    [].fast_superset_of?([])
    [1,2,3,4,5].fast_superset_of?([1])
    [1,2,3,4,5].fast_superset_of?([2])
    [1,2,3,4,5].fast_superset_of?([5])
    [1,2,3,4,5].fast_superset_of?([1,2])
    [1,2,3,4,5].fast_superset_of?([1,4])
    [1,2,3,4,5].fast_superset_of?([2,5])
    [1,2,3,4,5].fast_superset_of?([4,5])
    [1,2,3,4,5].fast_superset_of?([1,2,3])
    [1,2,3,4,5].fast_superset_of?([2,3,5])
    [1,2,3,4,5].fast_superset_of?([1,4,5])
    [1,2,3,4,5].fast_superset_of?([1,2,3,4])
    [1,2,3,4,5].fast_superset_of?([1,2,4,5])
    [1,2,3,4,5].fast_superset_of?([2,3,4,5])
    [1,2,3,4,5].fast_superset_of?([1,2,3,4,5])
    [1,2,3,4,5].fast_superset_of?([0])
    [1,2,3,4,5].fast_superset_of?([6])
    [1,2,3,4,5].fast_superset_of?([0,1])
    [1,2,3,4,5].fast_superset_of?([2,6])
    [1,2,3,4,5].fast_superset_of?([6,7])
    [1,2,3,4,5].fast_superset_of?([1,2,6])
    [1,2,3,4,5].fast_superset_of?([0,2,3])
    [1,2,3,4,5].fast_superset_of?([7,8,9])
    [1,2,3,4,5].fast_superset_of?([0,1,2,3])
    [1,2,3,4,5].fast_superset_of?([3,4,5,6])
    [1,2,3,4,5].fast_superset_of?([6,7,8,9])
    [1,2,3,4,5].fast_superset_of?([0,1,2,3,4])
    [1,2,3,4,5].fast_superset_of?([2,3,4,5,6])
    [1,2,3,4,5].fast_superset_of?([6,7,8,9,10])
  end

  x.report("Rust") do
    [1,2,3,4,5].is_superset_of([])
    [].is_superset_of([1,2,3,4,5])
    [].is_superset_of([])
    [1,2,3,4,5].is_superset_of([1])
    [1,2,3,4,5].is_superset_of([2])
    [1,2,3,4,5].is_superset_of([5])
    [1,2,3,4,5].is_superset_of([1,2])
    [1,2,3,4,5].is_superset_of([1,4])
    [1,2,3,4,5].is_superset_of([2,5])
    [1,2,3,4,5].is_superset_of([4,5])
    [1,2,3,4,5].is_superset_of([1,2,3])
    [1,2,3,4,5].is_superset_of([2,3,5])
    [1,2,3,4,5].is_superset_of([1,4,5])
    [1,2,3,4,5].is_superset_of([1,2,3,4])
    [1,2,3,4,5].is_superset_of([1,2,4,5])
    [1,2,3,4,5].is_superset_of([2,3,4,5])
    [1,2,3,4,5].is_superset_of([1,2,3,4,5])
    [1,2,3,4,5].is_superset_of([0])
    [1,2,3,4,5].is_superset_of([6])
    [1,2,3,4,5].is_superset_of([0,1])
    [1,2,3,4,5].is_superset_of([2,6])
    [1,2,3,4,5].is_superset_of([6,7])
    [1,2,3,4,5].is_superset_of([1,2,6])
    [1,2,3,4,5].is_superset_of([0,2,3])
    [1,2,3,4,5].is_superset_of([7,8,9])
    [1,2,3,4,5].is_superset_of([0,1,2,3])
    [1,2,3,4,5].is_superset_of([3,4,5,6])
    [1,2,3,4,5].is_superset_of([6,7,8,9])
    [1,2,3,4,5].is_superset_of([0,1,2,3,4])
    [1,2,3,4,5].is_superset_of([2,3,4,5,6])
    [1,2,3,4,5].is_superset_of([6,7,8,9,10])
  end
end
